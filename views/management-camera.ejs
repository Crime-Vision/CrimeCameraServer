<!DOCTYPE html>

<html lang="en">
  <head>
    <title><%= title %></title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
      integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
      integrity="sha256-t9UJPrESBeG2ojKTIcFLPGF7nHi2vEc7f5A2KpH/UBU="
      crossorigin="anonymous"
    ></script>
    <script src="/javascripts/utils.js"></script>
    <script src="/javascripts/analyser.js"></script>
  </head>

  <body>
    <div style="width: 25vw; display: inline-block">
      <h2 style="text-align: center">Camera Information</h2>
      <pre class="prettyprint lang-json" style="max-height: 90vh"><%= JSON.stringify(camera, null, 4) %></pre>
    </div>

    <div class="content" style="width: 70vw; display: inline-block">
      <canvas id="chart-0" style="width: 70vw; height: 90vh"></canvas>
    </div>

    <script>
      var presets = window.chartColors;
      var utils = Samples.utils;
      var inputs = {
        min: 20,
        max: 80,
        count: 8,
        decimals: 2,
        continuity: 1,
      };

      function generateData() {
        return utils.numbers(inputs);
      }

      function generateLabels() {
        return utils.months({ count: inputs.count });
      }

      utils.srand(42);

      var data = {
        labels: generateLabels(),
        datasets: [
          {
            backgroundColor: utils.transparentize(presets.red),
            borderColor: presets.red,
            data: generateData(),
            hidden: true,
            label: 'D0',
          },
          {
            backgroundColor: utils.transparentize(presets.orange),
            borderColor: presets.orange,
            data: generateData(),
            label: 'D1',
            fill: '-1',
          },
          {
            backgroundColor: utils.transparentize(presets.yellow),
            borderColor: presets.yellow,
            data: generateData(),
            hidden: true,
            label: 'D2',
            fill: 1,
          },
          {
            backgroundColor: utils.transparentize(presets.green),
            borderColor: presets.green,
            data: generateData(),
            label: 'D3',
            fill: '-1',
          },
          {
            backgroundColor: utils.transparentize(presets.blue),
            borderColor: presets.blue,
            data: generateData(),
            label: 'D4',
            fill: '-1',
          },
          {
            backgroundColor: utils.transparentize(presets.grey),
            borderColor: presets.grey,
            data: generateData(),
            label: 'D5',
            fill: '+2',
          },
          {
            backgroundColor: utils.transparentize(presets.purple),
            borderColor: presets.purple,
            data: generateData(),
            label: 'D6',
            fill: false,
          },
          {
            backgroundColor: utils.transparentize(presets.red),
            borderColor: presets.red,
            data: generateData(),
            label: 'D7',
            fill: 8,
          },
          {
            backgroundColor: utils.transparentize(presets.orange),
            borderColor: presets.orange,
            data: generateData(),
            hidden: true,
            label: 'D8',
            fill: 'end',
          },
        ],
      };

      var options = {
        maintainAspectRatio: false,
        spanGaps: false,
        elements: {
          line: {
            tension: 0.000001,
          },
        },
        scales: {
          yAxes: [
            {
              stacked: true,
            },
          ],
        },
        plugins: {
          filler: {
            propagate: false,
          },
          'samples-filler-analyser': {
            target: 'chart-analyser',
          },
        },
      };

      var chart = new Chart('chart-0', {
        type: 'line',
        data: data,
        options: options,
      });

      // eslint-disable-next-line no-unused-vars
      function togglePropagate(btn) {
        var value = btn.classList.toggle('btn-on');
        chart.options.plugins.filler.propagate = value;
        chart.update();
      }

      // eslint-disable-next-line no-unused-vars
      function toggleSmooth(btn) {
        var value = btn.classList.toggle('btn-on');
        chart.options.elements.line.tension = value ? 0.4 : 0.000001;
        chart.update();
      }

      // eslint-disable-next-line no-unused-vars
      function randomize() {
        chart.data.datasets.forEach(function (dataset) {
          dataset.data = generateData();
        });
        chart.update();
      }
    </script>

    <script
      src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js"></script>
  </body>
</html>
